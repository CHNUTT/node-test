# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js Testing Pre CD

on:
  pull_request:
    branches: [ master ]

jobs:
  test-pre-cd:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      db:
        # Docker Hub image
        image: postgres:13
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: database_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

    # - name: Generate deployment package
    #   run: zip -r deploy.zip . -x '*.git*' '**node_modules**'
      
    # - name: Get timestamp
    #   uses: gerred/actions/current-time@master
    #   id: current-time
        
    # - name: Run string replace
    #   uses: frabert/replace-string-action@master
    #   id: format-time
    #   with:
    #     pattern: '[:\.]+'
    #     string: "${{ steps.current-time.outputs.time }}"
    #     replace-with: '-'
    #     flags: 'g'
      
    # - name: Deploy to EB
    #   uses: einaregilsson/beanstalk-deploy@v16
    #   with:
    #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     application_name: experiment-node-js
    #     environment_name: Experimentnodejs-env-1
    #     version_label: "node-js-experimental-${{ steps.format-time.outputs.replaced }}"
    #     region: us-east-2
    #     deployment_package: deploy.zip
